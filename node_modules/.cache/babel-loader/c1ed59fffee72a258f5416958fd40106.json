{"ast":null,"code":"\"use strict\";\n\nvar os = require(\"os\");\n/**\n * localIpAddress\n * Get the machine IP on the local network.\n *\n * @name localIpAddress\n * @function\n * @return {String} The local ip address as a string.\n */\n\n\nmodule.exports = function localIpAddress() {\n  var interfaces = Object.values(os.networkInterfaces());\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = interfaces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var iface = _step.value;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = iface[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var alias = _step2.value;\n\n          if (alias.family === \"IPv4\" && alias.address !== \"127.0.0.1\" && !alias.internal) {\n            return alias.address;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return \"0.0.0.0\";\n};","map":{"version":3,"names":["os","require","module","exports","localIpAddress","interfaces","Object","values","networkInterfaces","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","iface","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","alias","family","address","internal","err","return"],"sources":["/Users/effiphil/Desktop/myip/node_modules/local-ip-address/lib/index.js"],"sourcesContent":["\"use strict\";\n\nvar os = require(\"os\");\n\n/**\n * localIpAddress\n * Get the machine IP on the local network.\n *\n * @name localIpAddress\n * @function\n * @return {String} The local ip address as a string.\n */\nmodule.exports = function localIpAddress() {\n    var interfaces = Object.values(os.networkInterfaces());\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = interfaces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var iface = _step.value;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = iface[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var alias = _step2.value;\n\n                    if (alias.family === \"IPv4\" && alias.address !== \"127.0.0.1\" && !alias.internal) {\n                        return alias.address;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return \"0.0.0.0\";\n};"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,GAA0B;EACvC,IAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcP,EAAE,CAACQ,iBAAH,EAAd,CAAjB;EACA,IAAIC,yBAAyB,GAAG,IAAhC;EACA,IAAIC,iBAAiB,GAAG,KAAxB;EACA,IAAIC,cAAc,GAAGC,SAArB;;EAEA,IAAI;IACA,KAAK,IAAIC,SAAS,GAAGR,UAAU,CAACS,MAAM,CAACC,QAAR,CAAV,EAAhB,EAA+CC,KAApD,EAA2D,EAAEP,yBAAyB,GAAG,CAACO,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAA3D,EAA2HT,yBAAyB,GAAG,IAAvJ,EAA6J;MACzJ,IAAIU,KAAK,GAAGH,KAAK,CAACI,KAAlB;MACA,IAAIC,0BAA0B,GAAG,IAAjC;MACA,IAAIC,kBAAkB,GAAG,KAAzB;MACA,IAAIC,eAAe,GAAGX,SAAtB;;MAEA,IAAI;QACA,KAAK,IAAIY,UAAU,GAAGL,KAAK,CAACL,MAAM,CAACC,QAAR,CAAL,EAAjB,EAA2CU,MAAhD,EAAwD,EAAEJ,0BAA0B,GAAG,CAACI,MAAM,GAAGD,UAAU,CAACP,IAAX,EAAV,EAA6BC,IAA5D,CAAxD,EAA2HG,0BAA0B,GAAG,IAAxJ,EAA8J;UAC1J,IAAIK,KAAK,GAAGD,MAAM,CAACL,KAAnB;;UAEA,IAAIM,KAAK,CAACC,MAAN,KAAiB,MAAjB,IAA2BD,KAAK,CAACE,OAAN,KAAkB,WAA7C,IAA4D,CAACF,KAAK,CAACG,QAAvE,EAAiF;YAC7E,OAAOH,KAAK,CAACE,OAAb;UACH;QACJ;MACJ,CARD,CAQE,OAAOE,GAAP,EAAY;QACVR,kBAAkB,GAAG,IAArB;QACAC,eAAe,GAAGO,GAAlB;MACH,CAXD,SAWU;QACN,IAAI;UACA,IAAI,CAACT,0BAAD,IAA+BG,UAAU,CAACO,MAA9C,EAAsD;YAClDP,UAAU,CAACO,MAAX;UACH;QACJ,CAJD,SAIU;UACN,IAAIT,kBAAJ,EAAwB;YACpB,MAAMC,eAAN;UACH;QACJ;MACJ;IACJ;EACJ,CA9BD,CA8BE,OAAOO,GAAP,EAAY;IACVpB,iBAAiB,GAAG,IAApB;IACAC,cAAc,GAAGmB,GAAjB;EACH,CAjCD,SAiCU;IACN,IAAI;MACA,IAAI,CAACrB,yBAAD,IAA8BI,SAAS,CAACkB,MAA5C,EAAoD;QAChDlB,SAAS,CAACkB,MAAV;MACH;IACJ,CAJD,SAIU;MACN,IAAIrB,iBAAJ,EAAuB;QACnB,MAAMC,cAAN;MACH;IACJ;EACJ;;EAED,OAAO,SAAP;AACH,CApDD"},"metadata":{},"sourceType":"script"}