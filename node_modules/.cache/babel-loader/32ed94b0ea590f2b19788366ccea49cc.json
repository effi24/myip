{"ast":null,"code":"const ip = await new Promise((resolve, reject) => {\n  const conn = new RTCPeerConnection();\n  conn.createDataChannel('');\n  conn.createOffer(offer => conn.setLocalDescription(offer), reject);\n\n  conn.onicecandidate = ice => {\n    if (ice && ice.candidate && ice.candidate.candidate) {\n      resolve(i.candidate.candidate.split(' ')[4]);\n      conn.close();\n    }\n  };\n});\nexport { ip };","map":{"version":3,"names":["ip","Promise","resolve","reject","conn","RTCPeerConnection","createDataChannel","createOffer","offer","setLocalDescription","onicecandidate","ice","candidate","i","split","close"],"sources":["/Users/effiphil/Desktop/myip/src/utils/utils.js"],"sourcesContent":["const ip = await new Promise((resolve, reject) => {\n    const conn = new RTCPeerConnection()\n    conn.createDataChannel('')\n    conn.createOffer(offer => conn.setLocalDescription(offer), reject)\n    conn.onicecandidate = ice => {\n      if (ice && ice.candidate && ice.candidate.candidate) {\n        resolve(i.candidate.candidate.split(' ')[4])\n        conn.close()\n      }\n    }\n  })\n\n  export {ip}"],"mappings":"AAAA,MAAMA,EAAE,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC9C,MAAMC,IAAI,GAAG,IAAIC,iBAAJ,EAAb;EACAD,IAAI,CAACE,iBAAL,CAAuB,EAAvB;EACAF,IAAI,CAACG,WAAL,CAAiBC,KAAK,IAAIJ,IAAI,CAACK,mBAAL,CAAyBD,KAAzB,CAA1B,EAA2DL,MAA3D;;EACAC,IAAI,CAACM,cAAL,GAAsBC,GAAG,IAAI;IAC3B,IAAIA,GAAG,IAAIA,GAAG,CAACC,SAAX,IAAwBD,GAAG,CAACC,SAAJ,CAAcA,SAA1C,EAAqD;MACnDV,OAAO,CAACW,CAAC,CAACD,SAAF,CAAYA,SAAZ,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CAAP;MACAV,IAAI,CAACW,KAAL;IACD;EACF,CALD;AAMD,CAVc,CAAjB;AAYE,SAAQf,EAAR"},"metadata":{},"sourceType":"module"}