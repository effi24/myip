{"ast":null,"code":"function getUserIP(onNewIP) {\n  //  onNewIp - your listener function for new IPs\n  //compatibility for firefox and chrome\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n\n  var pc = new myPeerConnection({\n    iceServers: []\n  }),\n      noop = function () {},\n      localIPs = {},\n      ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,\n      key;\n\n  function iterateIP(ip) {\n    if (!localIPs[ip]) onNewIP(ip);\n    localIPs[ip] = true;\n  }\n\n  onNewIP; //create a bogus data channel\n\n  pc.createDataChannel(\"\"); // create offer and set local description\n\n  pc.createOffer().then(function (sdp) {\n    sdp.sdp.split('\\n').forEach(function (line) {\n      if (line.indexOf('candidate') < 0) return;\n      line.match(ipRegex).forEach(iterateIP);\n    });\n    pc.setLocalDescription(sdp, noop, noop);\n  }).catch(function (reason) {// An error occurred, so handle the failure to connect\n  }); //listen for candidate events\n\n  pc.onicecandidate = function (ice) {\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n    ice.candidate.candidate.match(ipRegex).forEach(iterateIP);\n  };\n}\n\nexport { getUserIP };","map":{"version":3,"names":["getUserIP","onNewIP","myPeerConnection","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","pc","iceServers","noop","localIPs","ipRegex","key","iterateIP","ip","createDataChannel","createOffer","then","sdp","split","forEach","line","indexOf","match","setLocalDescription","catch","reason","onicecandidate","ice","candidate"],"sources":["/Users/effiphil/Desktop/myip/src/utils/utils.js"],"sourcesContent":["function getUserIP(onNewIP) { //  onNewIp - your listener function for new IPs\n    //compatibility for firefox and chrome\n    var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n    var pc = new myPeerConnection({\n        iceServers: []\n      }),\n      noop = function() {},\n      localIPs = {},\n      ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,\n      key;\n  \n    function iterateIP(ip) {\n      if (!localIPs[ip]) onNewIP(ip);\n      localIPs[ip] = true;\n    }\n    onNewIP\n    //create a bogus data channel\n    pc.createDataChannel(\"\");\n  \n    // create offer and set local description\n    pc.createOffer().then(function(sdp) {\n      sdp.sdp.split('\\n').forEach(function(line) {\n        if (line.indexOf('candidate') < 0) return;\n        line.match(ipRegex).forEach(iterateIP);\n      });\n  \n      pc.setLocalDescription(sdp, noop, noop);\n    }).catch(function(reason) {\n      // An error occurred, so handle the failure to connect\n    });\n  \n    //listen for candidate events\n    pc.onicecandidate = function(ice) {\n      if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\n      ice.candidate.candidate.match(ipRegex).forEach(iterateIP);\n    };\n  }\n\nexport {getUserIP}"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,OAAnB,EAA4B;EAAE;EAC1B;EACA,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,iBAAP,IAA4BD,MAAM,CAACE,oBAAnC,IAA2DF,MAAM,CAACG,uBAAzF;;EACA,IAAIC,EAAE,GAAG,IAAIL,gBAAJ,CAAqB;IAC1BM,UAAU,EAAE;EADc,CAArB,CAAT;EAAA,IAGEC,IAAI,GAAG,YAAW,CAAE,CAHtB;EAAA,IAIEC,QAAQ,GAAG,EAJb;EAAA,IAKEC,OAAO,GAAG,iEALZ;EAAA,IAMEC,GANF;;EAQA,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;IACrB,IAAI,CAACJ,QAAQ,CAACI,EAAD,CAAb,EAAmBb,OAAO,CAACa,EAAD,CAAP;IACnBJ,QAAQ,CAACI,EAAD,CAAR,GAAe,IAAf;EACD;;EACDb,OAAO,CAfiB,CAgBxB;;EACAM,EAAE,CAACQ,iBAAH,CAAqB,EAArB,EAjBwB,CAmBxB;;EACAR,EAAE,CAACS,WAAH,GAAiBC,IAAjB,CAAsB,UAASC,GAAT,EAAc;IAClCA,GAAG,CAACA,GAAJ,CAAQC,KAAR,CAAc,IAAd,EAAoBC,OAApB,CAA4B,UAASC,IAAT,EAAe;MACzC,IAAIA,IAAI,CAACC,OAAL,CAAa,WAAb,IAA4B,CAAhC,EAAmC;MACnCD,IAAI,CAACE,KAAL,CAAWZ,OAAX,EAAoBS,OAApB,CAA4BP,SAA5B;IACD,CAHD;IAKAN,EAAE,CAACiB,mBAAH,CAAuBN,GAAvB,EAA4BT,IAA5B,EAAkCA,IAAlC;EACD,CAPD,EAOGgB,KAPH,CAOS,UAASC,MAAT,EAAiB,CACxB;EACD,CATD,EApBwB,CA+BxB;;EACAnB,EAAE,CAACoB,cAAH,GAAoB,UAASC,GAAT,EAAc;IAChC,IAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,SAAb,IAA0B,CAACD,GAAG,CAACC,SAAJ,CAAcA,SAAzC,IAAsD,CAACD,GAAG,CAACC,SAAJ,CAAcA,SAAd,CAAwBN,KAAxB,CAA8BZ,OAA9B,CAA3D,EAAmG;IACnGiB,GAAG,CAACC,SAAJ,CAAcA,SAAd,CAAwBN,KAAxB,CAA8BZ,OAA9B,EAAuCS,OAAvC,CAA+CP,SAA/C;EACD,CAHD;AAID;;AAEH,SAAQb,SAAR"},"metadata":{},"sourceType":"module"}