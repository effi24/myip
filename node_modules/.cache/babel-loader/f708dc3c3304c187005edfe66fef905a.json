{"ast":null,"code":"function discover() {\n  try {\n    //Get Local IP\n    window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n\n    if (pc) pc.close();\n    pc = new RTCPeerConnection({\n      iceServers: []\n    });\n    pc.onicecandidate = onIceCandidate;\n    pc.createDataChannel(\"\");\n    pc.createOffer(pc.setLocalDescription.bind(pc), noop);\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction onIceCandidate(ice) {\n  console.log(ice.candidate);\n  if (!ice || !ice.candidate || !ice.candidate.candidate) return;\n  var my_ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n  this.onicecandidate = noop;\n  ip = my_ip.split(\".\")[0] + '.' + my_ip.split(\".\")[1] + '.' + my_ip.split(\".\")[2];\n}\n\nexport { discover };","map":{"version":3,"names":["discover","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","pc","close","iceServers","onicecandidate","onIceCandidate","createDataChannel","createOffer","setLocalDescription","bind","noop","e","console","log","message","ice","candidate","my_ip","exec","ip","split"],"sources":["/Users/effiphil/Desktop/myip/src/utils/utils.js"],"sourcesContent":["function discover()\n{\n    try{\n        //Get Local IP\n        window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;   //compatibility for firefox and chrome\n\n        if (pc)\n            pc.close();\n        \n        pc = new RTCPeerConnection({iceServers:[]});   \n        pc.onicecandidate = onIceCandidate;   \n        pc.createDataChannel(\"\");   \n        pc.createOffer(pc.setLocalDescription.bind(pc), noop);   \n    \n    } catch (e)\n    { console.log(e.message);}\n}\n\n\n\n\nfunction onIceCandidate(ice)\n{   \n    console.log(ice.candidate);\n\n    if(!ice || !ice.candidate || !ice.candidate.candidate)  return;\n    \n    var my_ip = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n\n    this.onicecandidate = noop;\n\n    ip = my_ip.split(\".\")[0]+'.'+my_ip.split(\".\")[1]+'.'+my_ip.split(\".\")[2];\n}\n\nexport {discover}"],"mappings":"AAAA,SAASA,QAAT,GACA;EACI,IAAG;IACC;IACAC,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,IAA4BD,MAAM,CAACE,oBAAnC,IAA2DF,MAAM,CAACG,uBAA7F,CAFD,CAEyH;;IAExH,IAAIC,EAAJ,EACIA,EAAE,CAACC,KAAH;IAEJD,EAAE,GAAG,IAAIH,iBAAJ,CAAsB;MAACK,UAAU,EAAC;IAAZ,CAAtB,CAAL;IACAF,EAAE,CAACG,cAAH,GAAoBC,cAApB;IACAJ,EAAE,CAACK,iBAAH,CAAqB,EAArB;IACAL,EAAE,CAACM,WAAH,CAAeN,EAAE,CAACO,mBAAH,CAAuBC,IAAvB,CAA4BR,EAA5B,CAAf,EAAgDS,IAAhD;EAEH,CAZD,CAYE,OAAOC,CAAP,EACF;IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;EAAwB;AAC7B;;AAKD,SAAST,cAAT,CAAwBU,GAAxB,EACA;EACIH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,SAAhB;EAEA,IAAG,CAACD,GAAD,IAAQ,CAACA,GAAG,CAACC,SAAb,IAA0B,CAACD,GAAG,CAACC,SAAJ,CAAcA,SAA5C,EAAwD;EAExD,IAAIC,KAAK,GAAG,iEAAiEC,IAAjE,CAAsEH,GAAG,CAACC,SAAJ,CAAcA,SAApF,EAA+F,CAA/F,CAAZ;EAEA,KAAKZ,cAAL,GAAsBM,IAAtB;EAEAS,EAAE,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,IAAoB,GAApB,GAAwBH,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAxB,GAA4C,GAA5C,GAAgDH,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAArD;AACH;;AAED,SAAQxB,QAAR"},"metadata":{},"sourceType":"module"}