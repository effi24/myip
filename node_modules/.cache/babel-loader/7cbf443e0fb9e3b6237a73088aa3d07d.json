{"ast":null,"code":"const getLocalIp = () => {\n  window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\n\n  var pc = new RTCPeerConnection({\n    iceServers: []\n  }),\n      noop = function () {};\n\n  pc.createDataChannel(\"\"); //create a bogus data channel\n\n  pc.createOffer().then(() => {\n    pc.setLocalDescription.bind(pc);\n  });\n\n  pc.onicecandidate = function (ice) {\n    //listen for candidate events\n    if (!ice || !ice.candidate || !ice.candidate.candidate) return;\n    var myIP = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n    document.write('IP: ', myIP);\n    console.log(myIP);\n    pc.onicecandidate = noop;\n  };\n};\n\nexport { getLocalIp };","map":{"version":3,"names":["getLocalIp","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","pc","iceServers","noop","createDataChannel","createOffer","then","setLocalDescription","bind","onicecandidate","ice","candidate","myIP","exec","document","write","console","log"],"sources":["/Users/effiphil/Desktop/myip/src/utils/utils.js"],"sourcesContent":["\n\n    const getLocalIp = () => {\n        window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;   //compatibility for firefox and chrome\n        var pc = new RTCPeerConnection({iceServers:[]}), noop = function(){};      \n        pc.createDataChannel(\"\");    //create a bogus data channel\n        pc.createOffer().then(() => {\n            pc.setLocalDescription.bind(pc)\n        })\n   \n        pc.onicecandidate = function(ice){  //listen for candidate events\n            if(!ice || !ice.candidate || !ice.candidate.candidate)  return;\n            var myIP = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];\n            document.write('IP: ', myIP);\n            console.log(myIP);\n            pc.onicecandidate = noop;\n        };\n    }\n\n    export {getLocalIp}"],"mappings":"AAEI,MAAMA,UAAU,GAAG,MAAM;EACrBC,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,IAA4BD,MAAM,CAACE,oBAAnC,IAA2DF,MAAM,CAACG,uBAA7F,CADqB,CACmG;;EACxH,IAAIC,EAAE,GAAG,IAAIH,iBAAJ,CAAsB;IAACI,UAAU,EAAC;EAAZ,CAAtB,CAAT;EAAA,IAAiDC,IAAI,GAAG,YAAU,CAAE,CAApE;;EACAF,EAAE,CAACG,iBAAH,CAAqB,EAArB,EAHqB,CAGQ;;EAC7BH,EAAE,CAACI,WAAH,GAAiBC,IAAjB,CAAsB,MAAM;IACxBL,EAAE,CAACM,mBAAH,CAAuBC,IAAvB,CAA4BP,EAA5B;EACH,CAFD;;EAIAA,EAAE,CAACQ,cAAH,GAAoB,UAASC,GAAT,EAAa;IAAG;IAChC,IAAG,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,SAAb,IAA0B,CAACD,GAAG,CAACC,SAAJ,CAAcA,SAA5C,EAAwD;IACxD,IAAIC,IAAI,GAAG,iEAAiEC,IAAjE,CAAsEH,GAAG,CAACC,SAAJ,CAAcA,SAApF,EAA+F,CAA/F,CAAX;IACAG,QAAQ,CAACC,KAAT,CAAe,MAAf,EAAuBH,IAAvB;IACAI,OAAO,CAACC,GAAR,CAAYL,IAAZ;IACAX,EAAE,CAACQ,cAAH,GAAoBN,IAApB;EACH,CAND;AAOH,CAfD;;AAiBA,SAAQP,UAAR"},"metadata":{},"sourceType":"module"}